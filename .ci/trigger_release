#!/usr/bin/env python3

# heuristically determine whether cc-utils is available from PYTHONPATH
import os
import sys

import ci.util
import concourse.steps.component_descriptor_util as cdu
import concourse.client
import gci.componentmodel
import product.model
import product.util


def parse_component_descriptor():
    descriptor_path = cdu.component_descriptor_path(
        gci.componentmodel.SchemaVersion.V1,
    )
    return product.model.ComponentDescriptor.from_dict(ci.util.parse_yaml_file(descriptor_path))


def retrieve_latest_released_descriptor():
    version_resolver = product.util.ComponentResolver(ci.util.ctx().cfg_factory())

    component_name = ci.util.check_env('COMPONENT_NAME')
    latest_version = str(version_resolver.latest_component_version(component_name))

    descriptor_resolver = product.util.ComponentDescriptorResolver(ci.util.ctx().cfg_factory())
    return descriptor_resolver.retrieve_descriptor(
        component_reference=(component_name, latest_version)
    )


def trigger_release_job():
    concourse_cfg = ci.util.ctx().cfg_factory() \
        .cfg_set(ci.util.check_env('CONCOURSE_CURRENT_CFG')).concourse()
    concourse_api = concourse.client.from_cfg(
        concourse_cfg=concourse_cfg,
        team_name=ci.util.check_env('CONCOURSE_CURRENT_TEAM'),
    )

    ci.util.info('triggering release job {jn}'.format(jn=ci.util.check_env('RELEASE_JOB_NAME')))
    concourse_api.trigger_build(
        pipeline_name=ci.util.check_env('PIPELINE_NAME'),
        job_name=ci.util.check_env('RELEASE_JOB_NAME'),
    )


current_descriptor = parse_component_descriptor()
latest_descriptor = retrieve_latest_released_descriptor()

component_diff = product.util.diff_products(
    left_product=latest_descriptor,
    right_product=current_descriptor,
    ignore_component_names=(ci.util.check_env('COMPONENT_NAME'),),
)

if not component_diff:
    ci.util.info('no differences were found between current and latest release')
    sys.exit(0)

ci.util.info('diffs were found since last released landscape-setup version')
for left_c, right_c in component_diff.crefpairs_version_changed:
    ci.util.info('{cn}: released: {leftv}, current: {rightv}'.format(
        cn=left_c.name(),
        leftv=left_c.version(),
        rightv=right_c.version(),
        )
    )

trigger_release_job()